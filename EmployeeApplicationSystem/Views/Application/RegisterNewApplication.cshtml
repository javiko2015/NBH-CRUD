@model EmployeeApplicationSystem.Models.InputModels.AplicationInputModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("RegisterNewApplication", "Application", FormMethod.Post, new { id = "frmRegister" }))
{
  @Html.AntiForgeryToken()
    
  <div class="form-horizontal">
        
        <h4>Application</h4>
        <hr />


      @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        
        
      <div id="divStep1">

            <div class="form-group">
                @Html.LabelFor(model => model.TodayDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TodayDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.TodayDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailManager, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailManager, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailManager, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedPositionHired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                                   
                      @foreach (var item in Model.ListPositionsHired)
                        {
                        <div> @Html.RadioButtonFor(s => s.SelectedPositionHired, item.PositionId, new { onclick = "HideValidation()" }) @item.PositionName</div>
                        }
                        
                        <div>
                            @Html.RadioButtonFor(s => s.SelectedPositionHired, Model.ListPositionsHired.Count()+1, new { id = "idRadio", onclick = "HideValidation5()" })                            
                            @Html.TextBoxFor(s => s.SelectedPositionOther, "", new { id = "otherposition", onkeyup = "SelectRadio()"})          
                        </div>
                     <div class='PositionValidation' style="color:darkred;"></div>
                 </div> 
                 
             </div>       

             <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                  @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <button type="button" class="btn btn-light" onclick="MoveNextInitial()">SIGUIENTE</button>

       </div>       
        
             
      <div id="divStep2" style="display:none;"> 

          <div class="form-group">     
               @Html.LabelFor(model => model.Services, htmlAttributes: new { @class = "control-label col-md-2" })               
                 <div class="col-md-10">                 
                      <table>
                            @for (int i = 0; i < Model.ListServices.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.HiddenFor(x => Model.ListServices[i].ServiceId)
                                        @Html.CheckBoxFor(x => Model.ListServices[i].IsSelected , new { onclick = "HideValidation2()" })
                                        @Html.DisplayFor(x => Model.ListServices[i].ServiceName)
                                        @Html.HiddenFor(x => Model.ListServices[i].ServiceName)
                                    </td>
                                </tr>
                            }
                      </table> 
                     <div class='PositionValidation2' style="color:darkred;"></div>
                </div>
          </div>

          <div class="form-group">
                    @Html.LabelFor(model => model.AdittionalServices, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdittionalServices, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdittionalServices, "", new { @class = "text-danger" })
                    </div>
                </div>  
                <button type="button" class="btn btn-light" onclick="MoveNext()">SIGUIENTE</button>
                <button type="button" class="btn btn-light" onclick="MoveBack()">ATRAZ</button>
           </div>



     <div id="divStep3" style="display:none;">

         <div class="form-group">
             @Html.LabelFor(model => model.SelectedCompany, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-10">

                 @foreach (var item in Model.ListCompanies)
                            {
                     <div> @Html.RadioButtonFor(s => s.SelectedCompany, item.CompanyId, new { onclick = "HideValidation3()" }) @item.CompanyName</div>
                 }
                 <div class='PositionValidation3' style="color:darkred;"></div>
             </div>
         </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.AdittionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.AdittionalInformation, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.AdittionalInformation, "", new { @class = "text-danger" })
                 </div>
             </div>
             <button type="button" class="btn btn-light" onclick="MoveNext2()">SIGUIENTE</button>
             <button type="button" class="btn btn-light" onclick="MoveBack2()">ATRAZ</button>
         </div>


        <div id="divStep4" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.Buildings, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <table>
                        @for (int i = 0; i < Model.ListBuilds.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.HiddenFor(x => Model.ListBuilds[i].BuildId)
                                    @Html.CheckBoxFor(x => Model.ListBuilds[i].IsSelected, new { onclick = "HideValidation4()" })
                                    @Html.DisplayFor(x => Model.ListBuilds[i].BuildName)
                                    @Html.HiddenFor(x => Model.ListBuilds[i].BuildName)
                                </td>
                            </tr>
                        }
                    </table>
                    <div class='PositionValidation4' style="color:darkred;"></div>
                </div>
              
            </div>         

            <div class="form-group">
                @Html.LabelFor(model => model.RestrictedAccess, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RestrictedAccess, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RestrictedAccess, "", new { @class = "text-danger" })
                </div>
            </div>
             <button type="button" class="btn btn-light" onclick="MoveBackFinal()">ATRAZ</button>
             <button type="submit" class="btn btn-primary" value="Submit" onclick="BtnSubmit()">SUBMIT</button>
        </div>

  </div>
}

<div style="text-align :center">@Html.ActionLink("Back to List", "Index")</div>



@section Scripts { @Scripts.Render("~/bundles/jqueryval")}


    <script type="text/javascript">

        // *** Validatons *** 

        function MoveNextInitial() {
            $("#frmRegister").validate();
            if ($("#frmRegister").valid() && $("input[name='SelectedPositionHired']:checked").length > 0) 
            {
             $("#divStep1").hide();
             $("#divStep2").fadeIn();
            }
            else
            $('.PositionValidation').text("Position is required.");         
        }

        function MoveNext() {
            $("#frmRegister").validate();
            if ($("#frmRegister").valid() && ($("input[name*='ListServices']:checked").length) > 0) 
            {
             $("#divStep2").hide();
             $("#divStep3").fadeIn();
            }
            else 
             $('.PositionValidation2').text("Service is required.");
                              
        }

        function MoveNext2() {
            $("#frmRegister").validate();
            if ($("#frmRegister").valid() && $("input[name='SelectedCompany']:checked").length > 0)
            {
             $("#divStep3").hide();
             $("#divStep4").fadeIn();
            }
            else 
             $('.PositionValidation3').text("Company is required.");                               
        } 

        function SelectRadio() {                               
             $('#idRadio').prop('checked', 'checked');
             $('.PositionValidation').hide(); 
             }

        function changeRadioValue(newValue) {
            if ($("#idRadio").is(":checked")) {
                $('input[name=SelectedPositionHired]:checked', '#frmRegister').val(newValue);                
            }            
        }

        function BtnSubmit() {
            $("#frmRegister").validate();

            if ($("#frmRegister").valid() && ($("input[name*='ListBuilds']:checked").length) > 0) {

                $("#frmRegister").submit();
            }
            else {
                $('.PositionValidation4').text("Service is required.");
            }
        }

        function MoveBack(){

            $("#frmRegister").validate();
            $("#divStep2").hide();
            $("#divStep1").fadeIn();
        }

        function MoveBack2() {

            $("#frmRegister").validate();
            $("#divStep3").hide();
            $("#divStep2").fadeIn();
        }

        function MoveBackFinal() {

            $("#frmRegister").validate();
            $("#divStep4").hide();
            $("#divStep3").fadeIn();
        }

        function HideValidation() {
            if ($("input[name='SelectedPositionHired']:checked").length > 0) {
                $('.PositionValidation').hide();
            }
        }

        function HideValidation2() {
            if (($("input[name*='ListServices']:checked").length) > 0) {

                $('.PositionValidation2').hide();
            }
            else $('.PositionValidation2').show();
        }

        function HideValidation3() {
            if ($("input[name='SelectedCompany']:checked").length > 0)
            {
                $('.PositionValidation3').hide();
            }
        }

        function HideValidation4() {
            if (($("input[name*='ListBuilds']:checked").length) > 0) {               
                $('.PositionValidation4').hide();
            }
            else $('.PositionValidation4').show();
        }

        function HideValidation5() {
            if ($("input[name='SelectedPositionHired']:checked").length > 0) {               
                $('.PositionValidation').text("Position is required.");
                $('.PositionValidation').show();
            }
            if ($('input:text[name=SelectedPositionOther]').val().length != 0) {
                $('.PositionValidation').hide();
            }

        }

    </script>